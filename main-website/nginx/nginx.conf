events {
}
http {
  server {
    
    listen 80; 


    proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address 
    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    proxy_set_header Host $host; # to forward the original host requested by the client

    access_by_lua '
        local opts = {
            redirect_uri_path = "/redirect_uri",
            accept_none_alg = true,
            discovery = "biketracker-keycloak:8080/auth/realms/internal_applications/.well-known/openid-configuration",
            client_id = "elk",
            client_secret = "!!! Set this to the secret from the JSON !!! ",
            ssl_verify = "no",
            redirect_uri_scheme = "https",
            logout_path = "/logout",
            redirect_after_logout_uri = "biketracker-keycloak:8080/auth/realms/internal_applications/protocol/openid-connect/logout",
            redirect_after_logout_with_id_token_hint = false,
            session_contents = {id_token=true}
        }
        local res, err = require("resty.openidc").authenticate(opts)

        if err then
            ngx.status = 403
            ngx.say(err)
            ngx.exit(ngx.HTTP_FORBIDDEN)
        end
    ';

    location /auth {
      proxy_pass http://biketracker-keycloak:8080;
    }

    location / {
      proxy_pass http://biketracker-frontend:80;
    }
  }
}